// <auto-generated />
using System;
using Bank.API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bank.API.Migrations
{
    [DbContext(typeof(BankContext))]
    [Migration("20230114130307_AddSeedClient")]
    partial class AddSeedClient
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bank.API.Models.Inquiries.Inquiry", b =>
                {
                    b.Property<int>("InquiryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InquiryID"));

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InstallmentsNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("InquiryID");

                    b.HasIndex("ClientId");

                    b.ToTable("Inquiries");
                });

            modelBuilder.Entity("Bank.API.Models.Offers.Offer", b =>
                {
                    b.Property<int>("OfferID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfferID"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DocumentLinkValidDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InquiryID")
                        .HasColumnType("int");

                    b.Property<double>("MonthlyInstallment")
                        .HasColumnType("float");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.Property<int>("RequestedPeriodInMonth")
                        .HasColumnType("int");

                    b.Property<double>("RequestedValue")
                        .HasColumnType("float");

                    b.Property<Guid?>("ReviewerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OfferID");

                    b.HasIndex("ReviewerId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("Bank.API.Models.Users.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GovernmentDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("JobDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GovernmentDocumentId");

                    b.HasIndex("JobDetailsId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("37846734-172e-4149-8cec-6f43d1eb3f60"),
                            Email = "imie.nazwisko@example.com",
                            GovernmentDocumentId = new Guid("9150ebd7-dd84-4c97-bf58-62f1c3611545"),
                            JobDetailsId = new Guid("46b087f9-5c71-401f-a5cf-021274463715"),
                            Name = "imie",
                            Surname = "nazwisko"
                        });
                });

            modelBuilder.Entity("Bank.API.Models.Users.ClientInfo.GovernmentDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GovernmentDocument");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9150ebd7-dd84-4c97-bf58-62f1c3611545"),
                            Description = "Driver License",
                            Name = "Driver License",
                            Number = "number",
                            TypeId = 1
                        });
                });

            modelBuilder.Entity("Bank.API.Models.Users.ClientInfo.JobDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("JobDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("46b087f9-5c71-401f-a5cf-021274463715"),
                            Description = "Director",
                            Name = "Director",
                            StartDate = new DateTime(2022, 8, 14, 14, 3, 7, 334, DateTimeKind.Local).AddTicks(5606),
                            TypeId = 30
                        });
                });

            modelBuilder.Entity("Bank.API.Models.Users.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("abde25ad-214c-4ce3-9016-b194082be6ad"),
                            Email = "pracownik.jeden01@gmail.com",
                            Name = "pracownik",
                            Surname = "jeden"
                        });
                });

            modelBuilder.Entity("Bank.API.Models.Inquiries.Inquiry", b =>
                {
                    b.HasOne("Bank.API.Models.Users.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Bank.API.Models.Offers.Offer", b =>
                {
                    b.HasOne("Bank.API.Models.Users.Employee", "Reviewer")
                        .WithMany()
                        .HasForeignKey("ReviewerId");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("Bank.API.Models.Users.Client", b =>
                {
                    b.HasOne("Bank.API.Models.Users.ClientInfo.GovernmentDocument", "GovernmentDocument")
                        .WithMany()
                        .HasForeignKey("GovernmentDocumentId");

                    b.HasOne("Bank.API.Models.Users.ClientInfo.JobDetails", "JobDetails")
                        .WithMany()
                        .HasForeignKey("JobDetailsId");

                    b.Navigation("GovernmentDocument");

                    b.Navigation("JobDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
